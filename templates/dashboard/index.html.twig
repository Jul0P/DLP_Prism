{% extends 'base.html.twig' %}

{% block stylesheets %}
    <style>
        main {
            padding: 2rem;
            display: flex;
            flex-direction: column;
            gap: 30px;
        }

        header {
            display: flex;
            align-items: center;
            justify-content: space-between;
            padding: 0.5rem 2rem;
            border-bottom: 1px solid var(--border);
            position: sticky;
            top: 0;
            background-color: var(--background);
            z-index: 1000;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
        }

        .logo {
            width: 200px;
            height: auto;
            transition: background-color 0.5s ease, color 0.5s ease, border-color 0.5s ease, box-shadow 0.5s ease, opacity 0.5s ease, filter 0.5s ease;
        }

        .title {
            font-size: 2rem;
            font-weight: bold;
            letter-spacing: -0.02em;
            color: var(--foreground);
            margin-bottom: 0.5rem;
        }

        .subtitle {
            font-size: 1rem;
            color: var(--muted-foreground);
        }

        h1 {
            font-size: 1.5rem;
            font-weight: 600;
            color: var(--foreground);
            margin: 0;
        }

        .button-container {
            width: 200px;
            height: auto;
            display: flex;
            align-items: center;
            justify-content: right;
            gap: 0.75rem;
        }

        button {
            padding: 0.75rem;
            background-color: var(--primary);
            color: white;
            border: var(--border);
            border-radius: var(--radius);
            font-size: 1rem;
            font-weight: bold;
            cursor: pointer;
        }

        button:hover {
            background-color: hsl(12 76% 51%);
        }

        h1, img {
            transition: background-color 0.5s ease, color 0.5s ease, border-color 0.5s ease, box-shadow 0.5s ease;
        }

        footer {
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 40px;
            padding: 0.5rem 2rem;
            background-color: var(--background);
            border-top: 1px solid var(--border);
            box-shadow: 0 -2px 4px rgba(0, 0, 0, 0.05);
            color: var(--foreground);
            flex-shrink: 0;
        }

        footer p {
            margin: 0;
            font-size: 0.875rem;
            font-weight: 400;
            text-align: center;
        }

        .toolbar-container {
            display: flex;
            align-items: center;
            gap: 1rem;
            margin-bottom: 1rem;
        }
         
        .filter-container {
            position: relative;
            display: inline-block;
        }

        .filter-button {
            display: inline-flex;
            align-items: center;
            justify-content: center;
            gap: 0.5rem;
            white-space: nowrap;
            font-weight: 500;
            font-size: 0.75rem;
            height: 2rem;
            padding: 0 0.75rem;
            border: 1px dashed var(--input);
            background-color: var(--background);
            box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);
            border-radius: var(--radius);
            color: var(--foreground);
            transition: background-color 0.5s ease, color 0.5s ease, border-color 0.5s ease, box-shadow 0.5s ease;
            cursor: pointer;
        }

        .filter-button:hover {
            background-color: var(--accent);
            color: var(--accent-foreground);
        }

        .filter-button:focus-visible {
            outline: none;
            box-shadow: 0 0 0 1px var(--ring);
        }

        .filter-button:disabled {
            pointer-events: none;
            opacity: 0.5;
        }

        .filter-button img {
            width: 1rem;
            height: 1rem;
            flex-shrink: 0;
            pointer-events: none;
        }

        .separator {
            display: inline-block;
            width: 1px;
            height: 1rem;
            background-color: var(--border);
            margin: 0 0.5rem;
        }

        .badge {
            display: inline-block;
            padding: 0.25rem 0.5rem;
            font-size: 0.75rem;
            background-color: var(--muted);
            color: var(--muted-foreground);
            border-radius: 0.25rem;
            margin-left: 0.25rem;
        }

        .badge-outline {
            display: inline-block;
            width: max-content;
            white-space: nowrap;
            padding: 0.25rem 0.5rem;
            font-size: 0.75rem;
            background-color: transparent;
            color: var(--foreground);
            border: 1px solid var(--border);
            border-radius: 0.25rem;
        }

        .badge-container {
            display: grid;
            grid-template-columns: repeat(3, max-content);
            gap: 0.5rem;
            justify-content: start;
        }

        .mobile-only {
            display: inline-block;
        }

        .desktop-badges {
            display: none;
            align-items: center;
            gap: 0.25rem;
        }

        @media (min-width: 1024px) {
            .mobile-only {
                display: none;
            }
            .desktop-badges {
                display: flex;
            }
        }

        .popover-content {
            position: absolute;
            top: calc(100% + 0.4rem);
            left: 0;
            width: 200px;
            background-color: var(--popover);
            color: var(--popover-foreground);
            border: 1px solid var(--border);
            border-radius: var(--radius);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            z-index: 50;
            padding: 0;
            outline: none;
            animation-duration: 0.2s;
            animation-fill-mode: forwards;
        }

        .popover-content[data-state="open"] {
            animation-name: fade-in, zoom-in;
        }

        .popover-content[data-state="closed"] {
            animation-name: fade-out, zoom-out;
        }

        .popover-content[data-side="bottom"] {
            animation-name: slide-in-from-top, fade-in, zoom-in;
        }

        @keyframes fade-in {
            from { opacity: 0; }
            to { opacity: 1; }
        }

        @keyframes fade-out {
            from { opacity: 1; }
            to { opacity: 0; }
        }

        @keyframes zoom-in {
            from { transform: scale(0.95); }
            to { transform: scale(1); }
        }

        @keyframes zoom-out {
            from { transform: scale(1); }
            to { transform: scale(0.95); }
        }

        @keyframes slide-in-from-top {
            from { transform: translateY(-0.5rem); }
            to { transform: translateY(0); }
        }

        .command {
            display: flex;
            flex-direction: column;
            width: 100%;
            height: 100%;
            overflow: hidden;
            background-color: var(--popover);
            color: var(--popover-foreground);
            border-radius: var(--radius);
        }

        .command-input-wrapper {
            display: flex;
            align-items: center;
            border-bottom: 1px solid var(--border);
            padding: 0 0.75rem;
        }

        .command-input {
            flex: 1;
            height: 2.5rem;
            background-color: transparent;
            padding: 0.75rem 0;
            font-size: 0.875rem;
            outline: none;
            color: var(--foreground);
            border: none;
        }

        .command-input::placeholder {
            color: var(--muted-foreground);
        }

        .command-input:disabled {
            cursor: not-allowed;
            opacity: 0.5;
        }

        .command-input-wrapper img {
            width: 1rem;
            height: 1rem;
            margin-right: 0.5rem;
            flex-shrink: 0;
            opacity: 0.5;
        }

        .command-list {
            max-height: 300px;
            overflow-y: auto;
            overflow-x: hidden;
        }

        .command-group {
            overflow: hidden;
            padding: 0.25rem;
            color: var(--foreground);
        }

        .command-item {
            position: relative;
            display: flex;
            align-items: center;
            padding: 0.375rem 0.5rem;
            font-size: 0.875rem;
            cursor: default;
            user-select: none;
            border-radius: 0.25rem;
            outline: none;
        }

        .command-item:hover {
            background-color: var(--accent);
            color: var(--accent-foreground);
        }

        .command-item[data-selected="true"] {
            background-color: var(--accent);
            color: var(--accent-foreground);
        }

        .command-item[data-disabled="true"] {
            pointer-events: none;
            opacity: 0.5;
        }

        .command-item img {
            width: 1rem;
            height: 1rem;
            flex-shrink: 0;
            pointer-events: none;
        }

        .command-separator {
            height: 1px;
            background-color: var(--border);
        }

        .checkbox {
            width: 1rem;
            height: 1rem;
            border: 1px solid var(--primary);
            border-radius: 0.25rem;
            display: flex;
            align-items: center;
            justify-content: center;
            margin-right: 0.5rem;
            opacity: 0.5;
        }

        .checkbox.checked {
            background-color: var(--primary);
            color: var(--primary-foreground);
            opacity: 1;
        }

        .checkbox img {
            width: 1rem;
            height: 1rem;
            visibility: hidden;
        }

        .checkbox.checked img {
            visibility: visible;
        }

        .facet-count {
            margin-left: auto;
            width: 1rem;
            height: 1rem;
            display: flex;
            align-items: center;
            justify-content: center;
            font-family: monospace;
            font-size: 0.75rem;
            color: var(--foreground);
        }

        .command-item.reset {
            justify-content: center;
            text-align: center;
        }

        /* Style pour les inputs */
        .input {
            display: flex;
            width: 100%;
            height: 2.25rem;
            border: 1px solid var(--input);
            border-radius: var(--radius);
            background-color: transparent;
            padding: 0.25rem 0.75rem;
            font-size: 1rem;
            box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);
            color: var(--foreground);
        }

        .input::placeholder {
            color: var(--muted-foreground);
        }

        .input:focus-visible {
            outline: none;
            border-color: var(--ring);
            box-shadow: 0 0 0 1px var(--ring);
        }

        .input:disabled {
            cursor: not-allowed;
            opacity: 0.5;
        }

        .input[type="file"] {
            border: none;
            background-color: transparent;
            font-size: 0.875rem;
            font-weight: 500;
            color: var(--foreground);
        }

        @media (min-width: 768px) {
            .input {
                font-size: 0.875rem;
            }
        }

        .icon {
            filter: brightness(0) invert(0); /* Par défaut pour le thème clair */
            transition: filter 0.3s ease;
        }

        [data-theme="dark"] .icon {
            filter: brightness(0) invert(1); /* Inverse les couleurs pour le thème sombre */
        }

        .search-input {
            display: flex;
            width: 100%;
            max-width: 250px;
            height: 2rem;
            border: 1px solid var(--input);
            border-radius: var(--radius);
            background-color: var(--background);
            padding: 0.25rem 0.75rem;
            font-size: 0.875rem;
            color: var(--foreground);
            box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);
            transition: background-color 0.5s ease, color 0.5s ease, border-color 0.5s ease, box-shadow 0.5s ease;
        }

        .search-input::placeholder {
            color: var(--muted-foreground);
            transition: color 0.5s ease;
        }

        .search-input:focus-visible {
            outline: none;
            border-color: var(--ring);
            box-shadow: 0 0 0 1px var(--ring);
        }

        .search-input:disabled {
            cursor: not-allowed;
            opacity: 0.5;
        }

        .table-wrapper {
            position: relative;
            width: 100%;
            overflow: auto;
            border: 1px solid var(--border);
            border-radius: var(--radius);
            transition: background-color 0.5s ease, color 0.5s ease, border-color 0.5s ease, box-shadow 0.5s ease;
        }

        .table {
            width: 100%;
            text-align: left;
            font-size: 0.875rem;
            color: var(--foreground);
            background-color: var(--background);
            border-collapse: collapse;
            transition: background-color 0.5s ease, color 0.5s ease, border-color 0.5s ease, box-shadow 0.5s ease;
        }

        .table thead tr {
            border-bottom: 1px solid var(--border);
            transition: background-color 0.5s ease, color 0.5s ease, border-color 0.5s ease, box-shadow 0.5s ease;
        }

        .table th {
            height: 2.5rem;
            padding: 0 0.5rem;
            text-align: left;
            vertical-align: middle;
            font-weight: 500;
            color: var(--muted-foreground);
        }

        .table tr:hover {
            background-color: var(--muted);
        }

        .table tbody tr {
            border-bottom: 1px solid var(--border);
            transition: background-color 0.5s ease, color 0.5s ease, border-color 0.5s ease, box-shadow 0.5s ease;
        }

        .table tbody tr:last-child {
            border-bottom: none;
        }

        .table td {
            padding: 0.5rem;
            vertical-align: middle;
        }

        .table tr[data-state="selected"] {
            background-color: var(--muted);
        }                               

        .action-button {
            display: inline-flex;
            align-items: center;
            justify-content: center;
            gap: 0.5rem;
            height: 2rem;
            width: 2rem;
            padding: 0;
            background-color: transparent;
            border: none;
            border-radius: var(--radius);
            font-size: 0.875rem;
            font-weight: 500;
            color: var(--foreground);
            transition: background-color 0.5s ease, color 0.5s ease, border-color 0.5s ease, box-shadow 0.5s ease;
            cursor: pointer;
        }

        .action-button:hover {
            background-color: var(--muted-foreground);
        }

        .action-button:focus-visible {
            outline: none;
            box-shadow: 0 0 0 2px var(--ring);
        }

        .action-button:disabled {
            opacity: 0.5;
            cursor: not-allowed;
        }

        .action-button .icon {
            width: 1rem;
            height: 1rem;
            pointer-events: none;
        }

        .action-button[data-state="open"] {
            background-color: var(--muted-foreground);
        }

        .dropdown-menu-trigger {
            display: flex;
            align-items: center;
            gap: 0.75rem;
            padding: 0.5rem 1rem;
            background-color: var(--background);
            border: 1px solid var(--border);
            border-radius: var(--radius);
            cursor: pointer;
            transition: background-color 0.5s ease, color 0.5s ease, border-color 0.5s ease, box-shadow 0.5s ease;
            width: auto;
            white-space: nowrap;
        }

        .dropdown-menu-trigger:hover {
            background-color: var(--accent);
            border-color: var(--accent);
        }

        .dropdown-menu-trigger:focus-visible {
            outline: none;
            box-shadow: 0 0 0 2px var(--ring);
        }

        .dropdown-menu-trigger img {
            width: 2rem;
            height: 2rem;
            border-radius: 50%;
            flex-shrink: 0;
        }

        .dropdown-menu-trigger .user-info {
            display: flex;
            flex-direction: column;
            text-align: left;
            color: var(--foreground);
        }

        .dropdown-menu-trigger .user-info .username {
            font-size: 0.875rem;
            font-weight: 500;
        }

        .dropdown-menu-trigger .user-info .role {
            font-size: 0.75rem;
            color: var(--muted-foreground);
            font-weight: 400;
        }

        .dropdown-menu-content {
            position: absolute;
            top: calc(100% + 0.5rem);
            right: 2rem;
            width: auto;
            background-color: var(--popover);
            color: var(--popover-foreground);
            border: 1px solid var(--border);
            border-radius: var(--radius);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            z-index: 1000;
            display: none;
            animation-duration: 0.2s;
            animation-fill-mode: forwards;
            transition: background-color 0.5s ease, color 0.5s ease, border-color 0.5s ease, box-shadow 0.5s ease;
        }

        .dropdown-menu-content[data-state="open"] {
            display: block;
            animation-name: fade-in, zoom-in;
        }

        .dropdown-menu-content[data-state="closed"] {
            animation-name: fade-out, zoom-out;
        }

        .dropdown-menu-label {
            padding: 0.5rem;
            display: flex;
            align-items: center;
            gap: 0.75rem;
        }

        .dropdown-menu-label img {
            width: 2.5rem;
            height: 2.5rem;
            border-radius: 50%;
        }

        .dropdown-menu-label .user-info {
            display: flex;
            flex-direction: column;
        }

        .dropdown-menu-label .username {
            font-size: 0.875rem;
            font-weight: 500;
        }

        .dropdown-menu-label .email {
            font-size: 0.75rem;
            color: var(--muted-foreground);
        }

        .dropdown-menu-separator {
            height: 1px;
            background-color: var(--border);
            transition: background-color 0.5s ease, color 0.5s ease, border-color 0.5s ease, box-shadow 0.5s ease;
        }

        .dropdown-menu-item {
            display: flex;
            align-items: center;
            gap: 0.75rem;
            padding: 0.5rem 0.75rem;
            margin: 0.25rem;
            font-size: 0.875rem;
            color: var(--foreground);
            border-radius: 0.25rem;
            cursor: pointer;
            transition: background-color 0.5s ease, color 0.5s ease, border-color 0.5s ease, box-shadow 0.5s ease;
        }

        .dropdown-menu-item:hover {
            background-color: var(--accent);
            color: var(--accent-foreground);
        }

        .dropdown-menu-item img {
            width: 1rem;
            height: 1rem;
            flex-shrink: 0;
        }

        .dropdown-menu-item.theme-toggle .sun-icon {
            position: absolute;
            transform: rotate(90deg) scale(0);
            opacity: 0;
            filter: brightness(0) invert(1);
        }

        .dropdown-menu-item.theme-toggle .moon-icon {
            transform: rotate(0deg) scale(1);
            opacity: 1;
        }

        [data-theme="dark"] .dropdown-menu-item.theme-toggle .sun-icon {
            transform: rotate(0deg) scale(1);
            opacity: 1;
        }

        [data-theme="dark"] .dropdown-menu-item.theme-toggle .moon-icon {
            transform: rotate(-90deg) scale(0);
            opacity: 0;
        }

        .dropdown-menu-trigger .chevron {
            width: 1rem;
            height: 1rem;
            margin-left: auto;
            transition: transform 0.2s ease;
        }

        .dropdown-menu-trigger[aria-expanded="true"] .chevron {
            transform: rotate(180deg);
        }
    </style>
{% endblock %}

{% block title %}Prism - Tableau de bord{% endblock %}

{% block header %}
    <img src="{{ asset('assets/images/logo.png') }}" alt="Logo" class="logo">
    <h1>Tableau de bord</h1>
    <div class="button-container">
        <button class="dropdown-menu-trigger" data-popover-target="dropdown-menu-content" aria-haspopup="dialog" aria-expanded="false" aria-controls="dropdown-menu-content" data-state="closed">
            <img src="{{ asset('assets/icons/circle-user-round.svg') }}" alt="User Icon" class="icon">
            <div class="user-info">
                <span class="username">{{ app.user.prenom }} {{ app.user.nom }}</span>
                <span class="role">
                    {% if is_granted('ROLE_ADMIN') %}
                        Administrateur
                    {% elseif is_granted('ROLE_USER') %}
                        Enseignant
                    {% endif %}
                </span>
            </div>
            <img src="{{ asset('assets/icons/chevrons-up-down.svg') }}" alt="Chevron Icon" class="chevron icon">
        </button>
        <div class="dropdown-menu-content" id="dropdown-menu-content" data-state="closed" role="dialog" tabindex="-1">
            <div class="dropdown-menu-label">
                <img src="{{ asset('assets/icons/circle-user-round.svg') }}" alt="User Icon" class="icon">
                <div class="user-info">
                    <span class="username">{{ app.user.prenom }} {{ app.user.nom }}</span>
                    <span class="email">{{ app.user.email }}</span>
                </div>
            </div>
            <div class="dropdown-menu-separator"></div>
            <div class="dropdown-menu-item theme-toggle" id="theme-toggle">
                <img src="{{ asset('assets/icons/sun.svg') }}" alt="Sun Icon" class="sun-icon icon">
                <img src="{{ asset('assets/icons/moon.svg') }}" alt="Moon Icon" class="moon-icon icon">
                <span>Thème</span>
            </div>
            <div class="dropdown-menu-item logout-button" id="logout-button" data-form="logout-form">
                <img src="{{ asset('assets/icons/log-out.svg') }}" alt="Log Out Icon" class="icon">
                <span>Déconnexion</span>
            </div>
        </div>
        <form id="logout-form" method="post" action="{{ path('app_logout') }}" style="display: none;"></form>
    </div>
{% endblock %}

{% block main %}
    <div class="table-header">
        <h1 class="title">Liste des entreprises</h1>
        <p class="subtitle">Voici une liste des entreprises prenant des stagiaires de la section informatique de la Châtaigneraie</p>
    </div>
    <div class="table-container">
        <div class="toolbar-container">
            <form method="get" action="{{ path('app_dashboard') }}" id="searchForm">
                <input type="text" name="search" value="{{ search }}" placeholder="Rechercher par raison sociale" id="searchInput" class="search-input">
            </form>
            <div class="filter-container" id="filter-container">
                <!-- Bouton déclencheur -->
                <button class="filter-button" data-popover-target="popover-content-1" type="button" aria-haspopup="dialog" aria-expanded="false" aria-controls="popover-content-1" data-state="closed">
                    <img src="{{ asset('assets/icons/circle-plus.svg') }}" alt="Circle Plus Icon" class="icon"> {{ title }}
                    {% if selectedValues|length > 0 %}
                        <span class="separator"></span>
                        <span class="badge mobile-only">{{ selectedValues|length }}</span>
                        <div class="desktop-badges">
                            {% if selectedValues|length > 2 %}
                                <span class="badge">{{ selectedValues|length }} sélectionnés</span>
                            {% else %}
                                {% for option in options|filter(option => option.value in selectedValues) %}
                                    <span class="badge">{{ option.label }}</span>
                                {% endfor %}
                            {% endif %}
                        </div>
                    {% endif %}
                </button>
                <!-- Contenu du popover -->
                <div class="popover-content" id="popover-content-1" data-state="closed" role="dialog" tabindex="-1">
                    <div class="command">
                        <div class="command-input-wrapper">
                            <img src="{{ asset('assets/icons/search.svg') }}" alt="Search Icon" class="icon">
                            <input type="text" placeholder="Rechercher..." class="command-input" autocomplete="off" autocorrect="off" spellcheck="false" role="combobox" aria-expanded="true" aria-controls="command-list" />
                        </div>
                        <div class="command-list" role="listbox" aria-label="Suggestions" id="command-list">
                            <div class="command-group" role="presentation">
                                {% for option in options %}
                                    <div class="command-item" role="option" data-value="{{ option.value }}" data-selected="{{ option.value in selectedValues ? 'true' : 'false' }}" data-disabled="false">
                                        <div class="checkbox {% if option.value in selectedValues %}checked{% endif %}">
                                            <img src="{{ asset('assets/icons/check.svg') }}" alt="Check Icon" class="icon">
                                        </div>
                                        <span>{{ option.label }}</span>
                                        {% if facets[option.value] is defined %}
                                            <span class="facet-count">{{ facets[option.value] }}</span>
                                        {% endif %}
                                    </div>
                                {% endfor %}
                            </div>
                            {% if selectedValues|length > 0 %}
                                <div class="command-separator"></div>
                                <div class="command-group">
                                    <div class="command-item reset" role="option" data-value="reset">Réinitialiser</div>
                                </div>
                            {% endif %}
                        </div>
                    </div>
                </div>
            </div>
        </div> 

        <div class="table-wrapper">
            {# Vérifie si le tableau des entreprises contient au moins une entrée avant d'afficher le tableau #}
            {% if entreprises|length > 0 %}
                <table class="table">
                    <thead>
                        <tr>
                            <th scope="col">ID</th>
                            <th scope="col">Raison Sociale</th>
                            <th scope="col">Adresse</th>
                            <th scope="col">Tuteur</th>
                            <th scope="col">Profils</th>
                            <th scope="col">Étudiants</th>
                            <th scope="col">Jury</th>
                            {% if is_granted('ROLE_ADMIN') %}
                                <th scope="col">Actions</th>
                            {% endif %}
                        </tr>
                    </thead>
                    <tbody>
                        {% for entreprise in entreprises %}
                            <tr>
                                <td>{{ entreprise.id }}</td>
                                <td>{{ entreprise.rs }}</td>
                                <td>{{ entreprise.adresse }}<br>{{ entreprise.cp }} {{ entreprise.ville }}</td>
                                <td>
                                    {% if entreprise.personnes|length > 0 %}
                                        {% for tuteur in entreprise.personnes %}
                                            {{ tuteur.prenom }} {{ tuteur.nom }} ({{ tuteur.fonction }})<br>
                                            {{ tuteur.email }}<br>
                                            {{ tuteur.tel }}
                                        {% endfor %}
                                    {% else %}
                                        Aucun tuteur
                                    {% endif %}
                                </td>
                                <td>
                                    {% if entreprise.specialites|length > 0 %}
                                        <div class="badge-container">
                                            {% for specialite in entreprise.specialites -%}
                                                <span class="badge-outline">{{ specialite.nom }}</span>
                                            {%- endfor %}
                                        </div>
                                    {% else %}
                                        Aucune spécialité
                                    {% endif %}
                                </td>
                                <td>
                                    {% if entreprise.stages|length > 0 %}
                                        <div class="badge-container">
                                            {% for stage in entreprise.stages -%}
                                                {% if stage.etudiant %}
                                                    <span class="badge-outline">{{ stage.etudiant.prenom }} {{ stage.etudiant.nom }}</span>
                                                {% endif %}
                                            {%- endfor %}
                                        </div>
                                    {% else %}
                                        Aucun étudiant
                                    {% endif %}
                                </td>
                                <td>
                                    {% set hasJury = false %}
                                    {% if entreprise.personnes|length > 0 %}
                                        {% for personne in entreprise.personnes %}
                                            {% if personne.profils|length > 0 %}
                                                {% for profil in personne.profils %}
                                                    {% if profil.nom == 'Jury' %}
                                                        <span class="badge-outline">{{ personne.prenom }} {{ personne.nom }}</span>
                                                        {% set hasJury = true %}
                                                    {% endif %}
                                                {% endfor %}
                                            {% endif %}
                                        {% endfor %}
                                    {% endif %}
                                    {% if not hasJury %}
                                        Aucun jury
                                    {% endif %}
                                </td> 
                                {% if is_granted('ROLE_ADMIN') %}
                                    <td>
                                        <button class="action-button">
                                            <img src="{{ asset('assets/icons/eye.svg') }}" alt="View Icon" class="icon">
                                        </button>
                                        <button class="action-button">
                                            <img src="{{ asset('assets/icons/pencil.svg') }}" alt="Edit Icon" class="icon">
                                        </button>
                                        <button class="action-button">
                                            <img src="{{ asset('assets/icons/trash-2.svg') }}" alt="Delete Icon" class="icon">
                                        </button>
                                    </td>
                                {% endif %}
                            </tr>
                        {% endfor %}
                    </tbody>
                </table>
            {% else %}
                <p>Aucune entreprise trouvée</p>
            {% endif %}
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Gestion de la recherche
            const searchForm = document.getElementById('searchForm');
            const searchInput = document.getElementById('searchInput');
            let timeout = null;

            if (searchInput) {
                searchInput.addEventListener('input', function () {
                    clearTimeout(timeout);
                    timeout = setTimeout(function () {
                        searchForm.submit();
                    }, 1500);
                });
            }

            // Gestion du thème
            const html = document.documentElement;
            const logo = document.querySelector('header .logo');
            const themeToggle = document.getElementById('theme-toggle');

            const updateLogo = () => {
                const currentTheme = html.getAttribute('data-theme');
                logo.src = currentTheme === 'dark' 
                    ? "{{ asset('assets/images/logo-dark.png') }}" 
                    : "{{ asset('assets/images/logo.png') }}";
            };

            if (localStorage.getItem('theme') === 'dark') {
                html.setAttribute('data-theme', 'dark');
            } else {
                html.setAttribute('data-theme', 'light');
            }
            updateLogo();

            if (themeToggle) {
                themeToggle.addEventListener('click', () => {
                    const currentTheme = html.getAttribute('data-theme');
                    const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
                    html.setAttribute('data-theme', newTheme);
                    localStorage.setItem('theme', newTheme);
                    updateLogo();
                });
            }

            // Gestion des popovers (usernav et filtre)
            const popovers = document.querySelectorAll('[data-popover-target]');
            
            // Réinitialisation de tous les popovers au chargement
            popovers.forEach(popoverTrigger => {
                const targetId = popoverTrigger.getAttribute('data-popover-target');
                const popoverContent = document.getElementById(targetId);
                if (popoverContent) {
                    popoverContent.setAttribute('data-state', 'closed');
                    popoverContent.style.display = 'none';
                    popoverTrigger.setAttribute('aria-expanded', 'false');
                }
            });

            // Gestion du clic sur les déclencheurs de popover
            popovers.forEach(popoverTrigger => {
                popoverTrigger.addEventListener('click', (event) => {
                    event.stopPropagation();
                    const targetId = popoverTrigger.getAttribute('data-popover-target');
                    const popoverContent = document.getElementById(targetId);

                    if (popoverContent) {
                        const isOpen = popoverContent.getAttribute('data-state') === 'open';
                        
                        // Ferme tous les autres popovers
                        popovers.forEach(otherTrigger => {
                            const otherTargetId = otherTrigger.getAttribute('data-popover-target');
                            const otherContent = document.getElementById(otherTargetId);
                            if (otherContent && otherTargetId !== targetId) {
                                otherContent.setAttribute('data-state', 'closed');
                                otherContent.style.display = 'none';
                                otherTrigger.setAttribute('aria-expanded', 'false');
                            }
                        });

                        // Ouvre ou ferme le popover actuel
                        popoverContent.setAttribute('data-state', isOpen ? 'closed' : 'open');
                        popoverContent.style.display = isOpen ? 'none' : 'block';
                        popoverTrigger.setAttribute('aria-expanded', !isOpen);

                        // Pour le popover de filtre, réinitialiser la recherche
                        if (targetId === 'popover-content-1' && !isOpen) {
                            const commandInput = popoverContent.querySelector('.command-input');
                            if (commandInput) {
                                commandInput.value = '';
                                filterOptions('');
                            }
                        }
                    }
                });
            });

            // Ferme tous les popovers lorsqu'on clique à l'extérieur
            document.addEventListener('click', (event) => {
                popovers.forEach(popoverTrigger => {
                    const targetId = popoverTrigger.getAttribute('data-popover-target');
                    const popoverContent = document.getElementById(targetId);
                    if (popoverContent && !popoverContent.contains(event.target) && !popoverTrigger.contains(event.target)) {
                        popoverContent.setAttribute('data-state', 'closed');
                        popoverContent.style.display = 'none';
                        popoverTrigger.setAttribute('aria-expanded', 'false');
                    }
                });
            });

            // Gestion de la déconnexion
            const logoutButton = document.getElementById('logout-button');
            if (logoutButton) {
                logoutButton.addEventListener('click', () => {
                    const form = document.getElementById('logout-form');
                    if (form) {
                        form.submit();
                    }
                });
            }

            // Gestion du filtre
            let selectedValues = {{ selectedValues|json_encode|raw }};
            selectedValues = Array.isArray(selectedValues) ? selectedValues.filter(value => typeof value === 'string' && value.trim() !== '') : [];

            function updateBadges() {
                const button = document.querySelector('.filter-button');
                const separator = button.querySelector('.separator');
                const mobileBadge = button.querySelector('.badge.mobile-only');
                const desktopBadges = button.querySelector('.desktop-badges');

                if (separator) separator.remove();
                if (mobileBadge) mobileBadge.remove();
                if (desktopBadges) desktopBadges.remove();

                if (selectedValues.length > 0) {
                    const separator = document.createElement('span');
                    separator.className = 'separator';
                    button.appendChild(separator);

                    const mobileBadge = document.createElement('span');
                    mobileBadge.className = 'badge mobile-only';
                    mobileBadge.textContent = selectedValues.length;
                    button.appendChild(mobileBadge);

                    const desktopBadges = document.createElement('div');
                    desktopBadges.className = 'desktop-badges';
                    if (selectedValues.length > 2) {
                        const badge = document.createElement('span');
                        badge.className = 'badge';
                        badge.textContent = `${selectedValues.length} sélectionnés`;
                        desktopBadges.appendChild(badge);
                    } else {
                        {% for option in options %}
                            if (selectedValues.includes('{{ option.value }}')) {
                                const badge = document.createElement('span');
                                badge.className = 'badge';
                                badge.textContent = '{{ option.label }}';
                                desktopBadges.appendChild(badge);
                            }
                        {% endfor %}
                    }
                    button.appendChild(desktopBadges);
                }
            }

            function submitFilters() {
                const validValues = selectedValues.filter(value => typeof value === 'string' && value.trim() !== '');
                const form = document.createElement('form');
                form.method = 'GET';
                form.action = '{{ path('app_dashboard') }}';

                if (searchInput && searchInput.value) {
                    const search = document.createElement('input');
                    search.type = 'hidden';
                    search.name = 'search';
                    search.value = searchInput.value;
                    form.appendChild(search);
                }

                validValues.forEach(value => {
                    const input = document.createElement('input');
                    input.type = 'hidden';
                    input.name = 'filters[]';
                    input.value = value;
                    form.appendChild(input);
                });

                document.body.appendChild(form);
                form.submit();
            }

            function filterOptions(query) {
                const commandItems = document.querySelectorAll('.command-item:not(.reset)');
                const lowerQuery = query.toLowerCase().trim();

                commandItems.forEach(item => {
                    const label = item.querySelector('span').textContent.toLowerCase();
                    item.style.display = (lowerQuery === '' || label.includes(lowerQuery)) ? '' : 'none';
                });

                const resetItem = document.querySelector('.command-item.reset');
                if (resetItem) {
                    resetItem.style.display = '';
                }
            }

            const commandInput = document.querySelector('.command-input');
            if (commandInput) {
                commandInput.addEventListener('input', function () {
                    filterOptions(this.value);
                });
            }

            const commandItems = document.querySelectorAll('.command-item:not(.reset)');
            commandItems.forEach(item => {
                item.addEventListener('click', function (event) {
                    event.stopPropagation();
                    const value = this.getAttribute('data-value');
                    const checkbox = this.querySelector('.checkbox');

                    if (selectedValues.includes(value)) {
                        selectedValues = selectedValues.filter(v => v !== value);
                        this.setAttribute('data-selected', 'false');
                        checkbox.classList.remove('checked');
                    } else {
                        selectedValues.push(value);
                        this.setAttribute('data-selected', 'true');
                        checkbox.classList.add('checked');
                    }

                    updateBadges();
                    submitFilters();
                });
            });

            const resetItems = document.querySelectorAll('.command-item.reset');
            resetItems.forEach(item => {
                item.addEventListener('click', function (event) {
                    event.stopPropagation();
                    selectedValues = [];
                    document.querySelectorAll('.command-item:not(.reset)').forEach(item => {
                        item.setAttribute('data-selected', 'false');
                        const checkbox = item.querySelector('.checkbox');
                        if (checkbox) checkbox.classList.remove('checked');
                    });

                    const popover = this.closest('.popover-content');
                    if (popover) {
                        popover.setAttribute('data-state', 'closed');
                        popover.style.display = 'none';
                        const button = document.querySelector(`.filter-button[data-popover-target="${popover.id}"]`);
                        if (button) {
                            button.setAttribute('aria-expanded', 'false');
                        }
                    }

                    updateBadges();
                    submitFilters();
                });
            });
        });
    </script>
{% endblock %}